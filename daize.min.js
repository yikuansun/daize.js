const daize={displayCanvas:class extends HTMLElement{constructor(t,e,i){super(),this.width=t,this.height=e,this.unit_type=i}static get observedAttributes(){return["width","height"]}attributeChangedCallback(t,e,i){switch(t){case"width":this.style.width=i.toString()+this.unit_type;break;case"height":this.style.height=i.toString()+this.unit_type}}connectedCallback(){this.style.width=this.width.toString()+this.unit_type,this.style.height=this.height.toString()+this.unit_type,this.style.backgroundColor="aliceblue",this.style.display="block",this.style.position="relative",this.style.overflow="hidden"}get width(){return parseFloat(this.getAttribute("width"))}get height(){return parseFloat(this.getAttribute("height"))}set width(t){this.setAttribute("width",t)}set height(t){this.setAttribute("height",t)}addsprite(t){if("daize-sprite"!=t.tagName.toLowerCase())throw"daize error: not a sprite!";this.appendChild(t)}deleteallsprites(){for(;0<this.childElementCount;)this.childNodes[0].remove()}clearstamps(){for(var t=0;t<this.childElementCount;)"stamp"==this.childNodes[t].getAttribute("class")?this.childNodes[t].remove():t++}},sprite:class extends HTMLElement{constructor(t,e,i,s,h,r){super(),this.width=t,this.height=e,this.x=i,this.y=s,this.angle=h,this.unit_type=r,this.costume="",this.visibility=1,this.layer=1}static get observedAttributes(){return["width","height","x","y","angle","costume","visibility","layer"]}attributeChangedCallback(t,e,i){switch(t){case"width":this.style.width=i.toString()+this.unit_type;break;case"height":this.style.height=i.toString()+this.unit_type;break;case"x":this.style.left=(i-this.width/2).toString()+this.unit_type;break;case"y":this.style.top=(i-this.height/2).toString()+this.unit_type;break;case"angle":this.style.transform="rotate("+i.toString()+"rad)";break;case"costume":this.style.backgroundImage="url('"+i+"')",this.style.backgroundSize="100% 100%",this.style.backgroundRepeat="no-repeat";break;case"visibility":this.style.opacity=this.visibility.toString();break;case"layer":this.style.zIndex=this.layer.toString()}}connectedCallback(){this.style.width=this.width.toString()+this.unit_type,this.style.height=this.height.toString()+this.unit_type,this.style.top=(this.y-this.height/2).toString()+this.unit_type,this.style.left=(this.x-this.width/2).toString()+this.unit_type,this.style.transform="rotate("+this.angle.toString()+")",this.style.position="absolute"}get x(){return parseFloat(this.getAttribute("x"))}get y(){return parseFloat(this.getAttribute("y"))}get width(){return parseFloat(this.getAttribute("width"))}get height(){return parseFloat(this.getAttribute("height"))}get angle(){return parseFloat(this.getAttribute("angle"))}get costume(){return this.getAttribute("costume")}get visibility(){return parseFloat(this.getAttribute("visibility"))}get layer(){return parseFloat(this.getAttribute("layer"))}set x(t){this.setAttribute("x",t)}set y(t){this.setAttribute("y",t)}set width(t){this.setAttribute("width",t)}set height(t){this.setAttribute("height",t)}set angle(t){this.setAttribute("angle",t)}set costume(t){this.setAttribute("costume",t)}set visibility(t){this.setAttribute("visibility",t)}set layer(t){this.setAttribute("layer",t)}movevec(t,e){this.x+=Math.cos(e)*t,this.y-=Math.sin(e)*t}boxcollision(t){return parseFloat(this.style.top)+parseFloat(this.style.height)>=parseFloat(t.style.top)&&parseFloat(this.style.left)+parseFloat(this.style.width)>=parseFloat(t.style.left)&&parseFloat(this.style.top)<=parseFloat(t.style.top)+parseFloat(t.style.height)&&parseFloat(this.style.left)<=parseFloat(t.style.left)+parseFloat(t.style.width)}stamp(){var t=this.cloneNode(!0);t.setAttribute("class","stamp"),t.layer=0,this.parentElement.appendChild(t)}}};customElements.define("daize-canvas",daize.displayCanvas),customElements.define("daize-sprite",daize.sprite);